import _ from "lodash";
import React from "react";

import { ProgressBarShape } from "./ProgressBarShape";
import { indicatorStore } from "@/stores/IndicatorStore.js";
import { observer } from "mobx-react-lite";

import styles from "./ProgressBar.module.css";

const ProgressBar = observer(() => {
    const {
        currentValue,
        progressBarKeys: { indicatorType },
        progressBarDatum: datumObject,
    } = indicatorStore;

    const { bottomBound, topBound, firstTarget, secondTarget } = datumObject;

    const barSize = topBound - bottomBound;

    const getPercent = (value, size, bottom) => {
        const percent = (100 * (value - bottom)) / size;
        return _.round(percent);
    };

    const getPercentageValue = (value, size, bottom) => {
        if (size === 0) return 100;
        const percent = (100 * (value - bottom)) / size;
        return _.round(percent);
    };

    const size = {
        currentValueWidth: 0,
        firstTargetWidth: 0,
        secondTargetWidth: 0,
        percentageValue: 0,
    };

    if (barSize >= 0) {
        if (firstTarget >= bottomBound && firstTarget <= topBound) {
            size.firstTargetWidth = getPercent(
                firstTarget,
                barSize,
                bottomBound,
            );
        }

        if (secondTarget >= bottomBound && secondTarget <= topBound) {
            size.secondTargetWidth = getPercent(
                secondTarget,
                barSize,
                bottomBound,
            );
        }

        if (currentValue >= bottomBound) {
            size.percentageValue = getPercentageValue(
                currentValue,
                barSize,
                bottomBound,
            );

            if (currentValue >= topBound) {
                size.currentValueWidth = 100;
            } else {
                size.currentValueWidth = getPercent(
                    currentValue,
                    barSize,
                    bottomBound,
                );
            }
        }
    }

    return (
        <div className={styles.Container}>
            <ProgressBarShape
                bottomBoundFormatted={bottomBound}
                topBoundFormatted={topBound}
                indicatorType={indicatorType}
                size={size}
            />
        </div>
    );
});

export default ProgressBar;
