import _ from "lodash";
import React from "react";
import classNames from "classnames";

import {
    ProgressBarCurrentPosition,
    ProgressBarTarget,
} from "./SmallBarComposition";

import { indicatorStore } from "@/stores/IndicatorStore.js";
import { observer } from "mobx-react-lite";

import smallBarStyles from "./ProgressSmallBar.module.css";

const ProgressSmallBar = observer(({ size, position }) => {
    const {
        progressBarKeys: { indicatorType, color },
        indicatorSize,
        progressBarDatum: datumObject,
    } = indicatorStore;

    if (!datumObject) {
        return null;
    }

    const percentStringSize = {
        currentValueWidth: `${size.currentValueWidth}%`,
        firstTargetWidth: `${size.firstTargetWidth}%`,
        secondTargetWidth: `${size.secondTargetWidth}%`,
        percentageValue: `${size.percentageValue}%`,
    };

    const checkBounds = (propertyName) => {
        const { bottomBound, topBound } = datumObject;
        const value = _.toNumber(datumObject[propertyName]);

        if (
            propertyName !== "currentValue" &&
            (value >= topBound || value <= bottomBound)
        ) {
            return false;
        }

        return true;
    };

    const renderTarget = (propertyName) => (
        <ProgressBarTarget
            position={position}
            propertyName={propertyName}
            size={percentStringSize}
            isVisible={checkBounds(propertyName)}
        />
    );

    const renderCurrentPosition = () => (
        <ProgressBarCurrentPosition
            width={percentStringSize}
            position={position}
        />
    );

    const className = classNames({
        [smallBarStyles.SmallBar]: true,
        [smallBarStyles.Clone]: position !== "middle",
        [smallBarStyles[indicatorSize]]: true,
        [smallBarStyles[indicatorType]]: true,
    });

    const smallBarStyle = {
        background: color[1],
    };

    return (
        <div id="smallBar" className={className} style={smallBarStyle}>
            {renderCurrentPosition()}
            {renderTarget("firstTarget")}
            {renderTarget("secondTarget")}
        </div>
    );
});

export default ProgressSmallBar;
