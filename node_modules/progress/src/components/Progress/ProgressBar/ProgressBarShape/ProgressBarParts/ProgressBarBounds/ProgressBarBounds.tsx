import React from "react";
import classNames from "classnames";
import _ from "lodash";

import stylesBounds from "./ProgressBarBounds.module.css";
import { indicatorStore } from "@/stores/IndicatorStore.js";
import { observer } from "mobx-react-lite";

const ProgressBarBounds = observer(({ position, side, bound }) => {
    const {
        progressBarKeys: { indicatorType, showBounds },
    } = indicatorStore;

    let isDashboardView = false;

    const cardSize = "large";

    const boundsClassName = classNames(
        stylesBounds.Bounds,
        stylesBounds[indicatorType],
        stylesBounds[side],
    );

    const boundsLabelClassName = classNames({
        [stylesBounds.HiddenElement]: position !== "middle",
        [stylesBounds.Label]: true,
        [stylesBounds[cardSize]]: true,
        [stylesBounds[side]]: side === "left",
    });

    let style = null;
    let boundSide = "bound" + side;
    if (side === "left" && indicatorType === "ClassicIndicator") {
        const offset = isDashboardView ? _.toString(bound).length : 10;
        style = { width: `${offset}%` };
    }

    const label = showBounds ? bound : "";

    return (
        <div id={boundSide} className={boundsClassName} style={style}>
            <span className={boundsLabelClassName}>{label}</span>
        </div>
    );
});
export default ProgressBarBounds;
